Description: Template to create an EC2 instance

Parameters:
  FridayHITTVPCCIDRRange:
    Description: Defining the VPC IP Range for the FridayHITT Company
    Type: String
    Default: 10.0.0.0/16

  PublicSubnetCIDRRange:
    Description: Defining the IP range for the Public Subnet
    Type: String
    Default: 10.0.1.0/24

  PrivateSubnetCIDRRange:
    Description: Defining the IP range for the Private Subnet
    Type: String
    Default: 10.0.2.0/24

  AvailabilityZone:
    Description: Availability Zone for the subnets
    Type: AWS::EC2::AvailabilityZone::Name
    ConstraintDescription: Specify an available Availability Zone

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3.small
      - t3.medium

##########################################################################################################################
Resources:
  FridayHITTVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref FridayHITTVPCCIDRRange #10.0.0.0/16 - Example of how it can be provided
      EnableDnsSupport: true
      EnableDnsHostnames: true

  # Internet Gateway for Public Subnet
  FridayHITTInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name #This can be DEV,QA, WEB etc
          Value: FridayHITTInternetGateway

  FridayHITTAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref FridayHITTVPC
      InternetGatewayId: !Ref FridayHITTInternetGateway

  # Public Subnet
  FridayHITTPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FridayHITTVPC
      CidrBlock: !Ref PublicSubnetCIDRRange #10.0.1.0/24 - Example of how it can be provided
      AvailabilityZone: !Ref AvailabilityZone #!Select [0, !GetAZs ''] - Direct way of providing the Availability Zone
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name #Enter your Key Name
          Value: PublicSubnet

  # Private Subnet
  FridayHITTPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FridayHITTVPC
      CidrBlock: !Ref PrivateSubnetCIDRRange #10.0.2.0/24 - Example of how it can be provided
      AvailabilityZone: !Ref AvailabilityZone #!Select [0, !GetAZs ''] - Direct way of providing the Availability Zone
      Tags:
        - Key: Name
          Value: PrivateSubnet

  # Defining the Public EC2 instance
  FridayHITTPublicEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType #t2.micro - Example Value
      KeyName: StormHawker_FridayHITT # Replace with your actual key pair name
      ImageId: ami-00385a401487aefa4 # Replace with a valid AMI ID for your region
      SubnetId: !Ref FridayHITTPublicSubnet
      SecurityGroupIds: 
        - !Ref FridayHITTPublicEC2InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: FridayHITTPublicEC2Instance

  # Defining the Private EC2 instance
  FridayHITTPrivateEC2Instance: #Instance Name cannot contain Spaces or Special Characters. Only Alphanumeric
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType #t2.micro Choose the instance type (e.g., t2.micro)
      KeyName: StormHawker_FridayHITT # Replace with your EC2 key pair name
      ImageId: ami-00385a401487aefa4 # Replace with a valid AMI ID for your region
      SubnetId: !Ref FridayHITTPrivateSubnet
      SecurityGroupIds: 
        - !Ref FridayHITTPrivateEC2InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: FridayHITTPrivateEC2Instance

  # Defining the Jump Box EC2 instance
  FridayHITTJumpBoxEC2Instance:    #Instance Name cannot contain Spaces or Special Characters. Only Alphanumeric
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType #t2.micro Choose the instance type (e.g., t2.micro)
      KeyName: StormHawker_FridayHITT # Replace with your EC2 key pair name
      ImageId: ami-00385a401487aefa4 # Replace with a valid AMI ID for your region
      SubnetId: !Ref FridayHITTPublicSubnet
      SecurityGroupIds: 
        - !Ref FridayHITTJumpBoxEC2InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: FridayHITTJumpBoxEC2Instance

# Security Group for Public EC2 Instance
  FridayHITTPublicEC2InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Public instance security group allowing External communication
      VpcId: !Ref FridayHITTVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22 #SSH
          SourceSecurityGroupId: !Ref FridayHITTJumpBoxEC2InstanceSecurityGroup
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80 #HHTP
          CidrIp: 0.0.0.0/0  # anywhere from IPv4
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443 #HHTPS
          CidrIp: 0.0.0.0/0  # anywhere from IPv4
  
# Security Group for Private EC2 Instance
  FridayHITTPrivateEC2InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Private instance security group allowing Internal communication
      VpcId: !Ref FridayHITTVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22 #SSH
          SourceSecurityGroupID: !Ref FridayHITTJumpBoxEC2InstanceSecurityGroup
      
# Security Group for Jump Box EC2 Instance
  FridayHITTJumpBoxEC2InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Jump Box instance security group allowing SSH communication for Public & Private
      VpcId: !Ref FridayHITTVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22 #SSH
          CidrIp: 0.0.0.0/0  # anywhere from IPv4


#Creating Public Route Table
  FridayHITTPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FridayHITTVPC
      Tags:
        - Key: Name
          Value: FridayHITTPublicRouteTable

#Creating Public Route - Attaching RouteTable to Interent Gateway
  FridayHITTPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: FridayHITTAttachGateway
    Properties:
      RouteTableId: !Ref FridayHITTPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref FridayHITTInternetGateway

#Creating Public Subnet Route Table Association - Associating Public Route Table To Public Subnet
  FridayHITTPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref FridayHITTPublicSubnet
      RouteTableId: !Ref FridayHITTPublicRouteTable
  
#Creating Private Route Table
  FridayHITTPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FridayHITTVPC
      Tags:
        - Key: Name
          Value: FridayHITTPrivateRouteTable

#Creating Private Subnet Route Table Association - Associating Private Route Table To Private Subnet
  FridayHITTPrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref FridayHITTPrivateSubnet
      RouteTableId: !Ref FridayHITTPrivateRouteTable